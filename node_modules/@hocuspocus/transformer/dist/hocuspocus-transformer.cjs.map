{"version":3,"file":"hocuspocus-transformer.cjs","sources":["../src/Prosemirror.ts","../src/Tiptap.ts"],"sourcesContent":["import { Doc, applyUpdate, encodeStateAsUpdate } from 'yjs'\nimport { yDocToProsemirrorJSON, prosemirrorJSONToYDoc } from 'y-prosemirror'\nimport { Schema } from 'prosemirror-model'\nimport { Transformer } from './types'\n\nclass Prosemirror implements Transformer {\n\n  defaultSchema: Schema = new Schema({\n    nodes: {\n      text: {},\n      doc: { content: 'text*' },\n    },\n  })\n\n  schema(schema: Schema): Prosemirror {\n    this.defaultSchema = schema\n\n    return this\n  }\n\n  fromYdoc(document: Doc, fieldName?: string | Array<string>): any {\n    const data = {}\n\n    // allow a single field name\n    if (typeof fieldName === 'string') {\n      return yDocToProsemirrorJSON(document, fieldName)\n    }\n\n    // default to all available fields if the given field name is empty\n    if (fieldName === undefined || fieldName.length === 0) {\n      fieldName = Array.from(document.share.keys())\n    }\n\n    fieldName.forEach(field => {\n      // @ts-ignore\n      data[field] = yDocToProsemirrorJSON(document, field)\n    })\n\n    return data\n  }\n\n  toYdoc(document: any, fieldName: string | Array<string> = 'prosemirror', schema?: Schema): Doc {\n    if (!document) {\n      throw new Error(`Youâ€™ve passed an empty or invalid document to the Transformer. Make sure to pass ProseMirror-compatible JSON. Actually passed JSON: ${document}`)\n    }\n\n    // allow a single field name\n    if (typeof fieldName === 'string') {\n      return prosemirrorJSONToYDoc(schema || this.defaultSchema, document, fieldName)\n    }\n\n    const ydoc = new Doc()\n\n    fieldName.forEach(field => {\n      const update = encodeStateAsUpdate(\n        prosemirrorJSONToYDoc(schema || this.defaultSchema, document, field),\n      )\n\n      applyUpdate(ydoc, update)\n    })\n\n    return ydoc\n  }\n\n}\n\nexport const ProsemirrorTransformer = new Prosemirror()\n","import { Doc } from 'yjs'\nimport { Extensions } from '@tiptap/core/dist/packages/core/src/types'\nimport { getSchema } from '@tiptap/core'\nimport StarterKit from '@tiptap/starter-kit'\nimport { Transformer } from './types'\nimport { ProsemirrorTransformer } from './Prosemirror'\n\nexport class Tiptap implements Transformer {\n  defaultExtensions: Extensions = [\n    StarterKit,\n  ]\n\n  extensions(extensions: Extensions): Tiptap {\n    this.defaultExtensions = extensions\n\n    return this\n  }\n\n  fromYdoc(document: Doc, fieldName?: string | Array<string>): any {\n    return ProsemirrorTransformer.fromYdoc(document, fieldName)\n  }\n\n  toYdoc(document: any, fieldName: string | Array<string> = 'default', extensions?: Extensions): Doc {\n    return ProsemirrorTransformer.toYdoc(\n      document,\n      fieldName,\n      getSchema(extensions || this.defaultExtensions),\n    )\n  }\n\n}\n\nexport const TiptapTransformer = new Tiptap()\n"],"names":["Schema","yDocToProsemirrorJSON","prosemirrorJSONToYDoc","Doc","encodeStateAsUpdate","applyUpdate","StarterKit","getSchema"],"mappings":";;;;;;;;;;;;;;AAKA,MAAM,WAAW,CAAA;AAAjB,IAAA,WAAA,GAAA;QAEE,IAAa,CAAA,aAAA,GAAW,IAAIA,uBAAM,CAAC;AACjC,YAAA,KAAK,EAAE;AACL,gBAAA,IAAI,EAAE,EAAE;AACR,gBAAA,GAAG,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE;AAC1B,aAAA;AACF,SAAA,CAAC,CAAA;KAoDH;AAlDC,IAAA,MAAM,CAAC,MAAc,EAAA;AACnB,QAAA,IAAI,CAAC,aAAa,GAAG,MAAM,CAAA;AAE3B,QAAA,OAAO,IAAI,CAAA;KACZ;IAED,QAAQ,CAAC,QAAa,EAAE,SAAkC,EAAA;QACxD,MAAM,IAAI,GAAG,EAAE,CAAA;;AAGf,QAAA,IAAI,OAAO,SAAS,KAAK,QAAQ,EAAE;AACjC,YAAA,OAAOC,kCAAqB,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAA;AAClD,SAAA;;QAGD,IAAI,SAAS,KAAK,SAAS,IAAI,SAAS,CAAC,MAAM,KAAK,CAAC,EAAE;AACrD,YAAA,SAAS,GAAG,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,CAAA;AAC9C,SAAA;AAED,QAAA,SAAS,CAAC,OAAO,CAAC,KAAK,IAAG;;YAExB,IAAI,CAAC,KAAK,CAAC,GAAGA,kCAAqB,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAA;AACtD,SAAC,CAAC,CAAA;AAEF,QAAA,OAAO,IAAI,CAAA;KACZ;AAED,IAAA,MAAM,CAAC,QAAa,EAAE,SAAoC,GAAA,aAAa,EAAE,MAAe,EAAA;QACtF,IAAI,CAAC,QAAQ,EAAE;AACb,YAAA,MAAM,IAAI,KAAK,CAAC,uIAAuI,QAAQ,CAAA,CAAE,CAAC,CAAA;AACnK,SAAA;;AAGD,QAAA,IAAI,OAAO,SAAS,KAAK,QAAQ,EAAE;AACjC,YAAA,OAAOC,kCAAqB,CAAC,MAAM,IAAI,IAAI,CAAC,aAAa,EAAE,QAAQ,EAAE,SAAS,CAAC,CAAA;AAChF,SAAA;AAED,QAAA,MAAM,IAAI,GAAG,IAAIC,OAAG,EAAE,CAAA;AAEtB,QAAA,SAAS,CAAC,OAAO,CAAC,KAAK,IAAG;AACxB,YAAA,MAAM,MAAM,GAAGC,uBAAmB,CAChCF,kCAAqB,CAAC,MAAM,IAAI,IAAI,CAAC,aAAa,EAAE,QAAQ,EAAE,KAAK,CAAC,CACrE,CAAA;AAED,YAAAG,eAAW,CAAC,IAAI,EAAE,MAAM,CAAC,CAAA;AAC3B,SAAC,CAAC,CAAA;AAEF,QAAA,OAAO,IAAI,CAAA;KACZ;AAEF,CAAA;AAEY,MAAA,sBAAsB,GAAG,IAAI,WAAW;;MC3DxC,MAAM,CAAA;AAAnB,IAAA,WAAA,GAAA;AACE,QAAA,IAAA,CAAA,iBAAiB,GAAe;YAC9BC,8BAAU;SACX,CAAA;KAoBF;AAlBC,IAAA,UAAU,CAAC,UAAsB,EAAA;AAC/B,QAAA,IAAI,CAAC,iBAAiB,GAAG,UAAU,CAAA;AAEnC,QAAA,OAAO,IAAI,CAAA;KACZ;IAED,QAAQ,CAAC,QAAa,EAAE,SAAkC,EAAA;QACxD,OAAO,sBAAsB,CAAC,QAAQ,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAA;KAC5D;AAED,IAAA,MAAM,CAAC,QAAa,EAAE,SAAoC,GAAA,SAAS,EAAE,UAAuB,EAAA;AAC1F,QAAA,OAAO,sBAAsB,CAAC,MAAM,CAClC,QAAQ,EACR,SAAS,EACTC,cAAS,CAAC,UAAU,IAAI,IAAI,CAAC,iBAAiB,CAAC,CAChD,CAAA;KACF;AAEF,CAAA;AAEY,MAAA,iBAAiB,GAAG,IAAI,MAAM;;;;;;"}