(function (global, factory) {
  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@tiptap/core'), require('prosemirror-model'), require('zeed-dom')) :
  typeof define === 'function' && define.amd ? define(['exports', '@tiptap/core', 'prosemirror-model', 'zeed-dom'], factory) :
  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global["@tiptap/html"] = {}, global.core, global.prosemirrorModel, global.zeedDom));
})(this, (function (exports, core, prosemirrorModel, zeedDom) { 'use strict';

  function getHTMLFromFragment(doc, schema) {
      const document = prosemirrorModel.DOMSerializer
          .fromSchema(schema)
          .serializeFragment(doc.content, {
          document: zeedDom.createHTMLDocument(),
      });
      return document.render();
  }

  function generateHTML(doc, extensions) {
      const schema = core.getSchema(extensions);
      const contentNode = prosemirrorModel.Node.fromJSON(schema, doc);
      return getHTMLFromFragment(contentNode, schema);
  }

  function generateJSON(html, extensions) {
      const schema = core.getSchema(extensions);
      const dom = zeedDom.parseHTML(html);
      return prosemirrorModel.DOMParser.fromSchema(schema)
          .parse(dom)
          .toJSON();
  }

  exports.generateHTML = generateHTML;
  exports.generateJSON = generateJSON;

  Object.defineProperty(exports, '__esModule', { value: true });

}));
//# sourceMappingURL=tiptap-html.umd.js.map
